{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport LoginPage from '@/components/LoginPage.vue';\nimport HomePage from '@/components/HomePage.vue';\nimport RegisterPage from '@/components/RegisterPage.vue';\nconst routes = [{\n  path: '/',\n  name: 'Login',\n  component: LoginPage\n}, {\n  path: '/home',\n  name: 'Home',\n  component: HomePage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: RegisterPage\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = !!localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\n    next('/');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginPage","HomePage","RegisterPage","routes","path","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","matched","some","record"],"sources":["C:/Users/wy411/OneDrive/桌面/spring-boot-3-jwt-security-main/library/froentend/library-app/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport LoginPage from '@/components/LoginPage.vue';\r\nimport HomePage from '@/components/HomePage.vue';\r\nimport RegisterPage from '@/components/RegisterPage.vue';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Login',\r\n    component: LoginPage,\r\n  },\r\n  {\r\n    path: '/home',\r\n    name: 'Home',\r\n    component: HomePage,\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: RegisterPage,\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes,\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = !!localStorage.getItem('token'); \r\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\r\n    next('/');\r\n  } else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,YAAY,MAAM,+BAA+B;AAExD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEL,QAAQ;EACnBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEJ;AACb,CAAC,CACF;AAED,MAAMO,MAAM,GAAGX,YAAY,CAAC;EAC1BY,OAAO,EAAEX,gBAAgB,CAACY,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV;AACF,CAAC,CAAC;AAEFM,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACvD,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAChB,IAAI,CAACC,YAAY,CAAC,IAAI,CAACU,eAAe,EAAE;IAC3ED,IAAI,CAAC,GAAG,CAAC;EACX,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}